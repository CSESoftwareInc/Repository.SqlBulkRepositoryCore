// <auto-generated />
using System;
using CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20220407204007_ColumnNameMismatch")]
    partial class ColumnNameMismatch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyHome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HomeId");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Home_Address");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Home_Name");

                    b.HasKey("Id");

                    b.ToTable("Home_Alpha");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FatherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MotherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FatherId");

                    b.HasIndex("HomeId");

                    b.HasIndex("MotherId");

                    b.ToTable("FamilyTrees");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTreeLink", b =>
                {
                    b.Property<Guid>("PrimarySiblingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecondarySiblingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrimarySiblingId", "SecondarySiblingId");

                    b.HasIndex("SecondarySiblingId");

                    b.ToTable("FamilyTreeLink");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", b =>
                {
                    b.HasOne("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", "Father")
                        .WithMany("PaternalChildren")
                        .HasForeignKey("FatherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyHome", "Home")
                        .WithMany("Families")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", "Mother")
                        .WithMany("MaternalChildren")
                        .HasForeignKey("MotherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Father");

                    b.Navigation("Home");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTreeLink", b =>
                {
                    b.HasOne("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", "PrimarySibling")
                        .WithMany("CounterSiblings")
                        .HasForeignKey("PrimarySiblingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", "SecondarySibling")
                        .WithMany("Siblings")
                        .HasForeignKey("SecondarySiblingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PrimarySibling");

                    b.Navigation("SecondarySibling");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyHome", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("CSESoftware.Repository.SqlBulkRepositoryCore.TestDatabase.FamilyTree", b =>
                {
                    b.Navigation("CounterSiblings");

                    b.Navigation("MaternalChildren");

                    b.Navigation("PaternalChildren");

                    b.Navigation("Siblings");
                });
#pragma warning restore 612, 618
        }
    }
}
